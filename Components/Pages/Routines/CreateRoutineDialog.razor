
@using FitTrack.Data
@using FitTrack.Data.DTOs.Routines
@using FitTrack.Services.Routines
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@inject IRoutineService RoutineService
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<MudDialog>
    <TitleContent>
        @MudDialog.Title
    </TitleContent>
    <DialogContent>
        <MudForm @ref="@form" @bind-IsValid="@success" @bind-Errors="@errors">
            <MudFocusTrap>
                <MudTextField @bind-Value="NewRoutine.Name" Label="Name" Required="true" Variant="Variant.Outlined" RequiredError="A name is required for a new Routine." />
                <MudTextField @bind-Value="NewRoutine.Description" AutoGrow Lines="5" MaxLines="10" Label="Description" Variant="Variant.Outlined" />
            </MudFocusTrap>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Secondary" OnClick="() => MudDialog.Cancel()" Variant="Variant.Text">Cancel</MudButton>
            <MudButton Color="Color.Primary" OnClick="CreateRoutineAsync" Variant="Variant.Filled">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = null!;

    [Parameter] 
    public ApplicationUser ApplicationUser { get; set; } = null!;

    private CreateRoutineDto NewRoutine { get; set; } = new();
    private MudForm form = null!;
    private bool success;
    private string[] errors = [];

    protected override void OnInitialized()
    {
        NewRoutine.User = ApplicationUser;
    }

    private async Task CreateRoutineAsync()
    {
        await form.Validate();
        if (form.IsValid)
        {
            try
            {
                await RoutineService.CreateRoutineAsync(NewRoutine);
                MudDialog.Close(DialogResult.Ok(true));
            }
            catch
            {
                MudDialog.Close(DialogResult.Ok(false));
            }
        }
    }
}
